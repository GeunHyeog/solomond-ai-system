{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(where npx)",
      "Bash(git push:*)",
      "Bash(npm install:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(python3:*)",
      "Bash(ls:*)",
      "Bash(python:*)",
      "Bash(streamlit run:*)",
      "Bash(ffmpeg:*)",
      "Bash(tar:*)",
      "Bash(rm:*)",
      "Bash(pip install:*)",
      "Bash(pkill:*)",
      "Bash(taskkill:*)",
      "Bash(env)",
      "Bash(pip uninstall:*)",
      "Bash(pip show:*)",
      "Bash(grep:*)",
      "Bash(curl:*)",
      "Bash(kill:*)",
      "Bash(wmic process where:*)",
      "Bash(nvidia-smi:*)",
      "Bash(echo:*)",
      "WebFetch(domain:localhost)",
      "Bash(powershell:*)",
      "Bash(tasklist:*)",
      "Bash(find:*)",
      "Bash(tskill:*)",
      "Bash(del nul)",
      "Bash(set PYTHONIOENCODING=utf-8)",
      "Bash(npx @modelcontextprotocol/server-memory:*)",
      "Bash(npx:*)",
      "Bash(npm info:*)",
      "Bash(npm search:*)",
      "WebFetch(domain:github.com)",
      "mcp__ide__getDiagnostics",
      "Bash(gh repo view:*)",
      "Bash(git config:*)",
      "Bash(gh auth:*)",
      "Bash(wsl:*)",
      "Bash(cp:*)",
      "mcp__ide__executeCode",
      "Bash(dir C:UsersPC_58410solomond-ai-system*.log)",
      "Bash(where uv)",
      "Bash(where playwright)",
      "Bash(playwright --version)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(rg:*)",
      "Bash(git rm:*)",
      "Bash(where python)",
      "Bash(pip --version)",
      "Bash(compgen:*)",
      "mcp__*",
      "Bash(del /q \"C:\\Users\\PC_58410\\AppData\\Roaming\\Claude\\Cache\\*\")",
      "Bash(copy:*)",
      "Bash(timeout:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(code --version)",
      "Bash(claude)",
      "Bash(code:*)",
      "Bash(claude --ide)",
      "Bash(claude:*)",
      "Bash(dir /a \"C:\\Users\\PC_58410\\.config\\claude\")",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(tail:*)",
      "Bash(where claude)",
      "Bash(exit)",
      "Bash(dir:*)",
      "mcp__memory__search_nodes",
      "mcp__memory__create_entities",
      "mcp__memory__create_relations",
      "mcp__filesystem__list_directory",
      "mcp__perplexity__chat_completion",
      "mcp__filesystem__search_files",
      "Bash(\"C:\\Program Files\\nodejs\\npx.cmd\" @modelcontextprotocol/server-memory --help)",
      "Bash(cmd /c \"npx @modelcontextprotocol/server-memory --help\")",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(set NOTION_API_KEY=%NOTION_API_KEY%)",
      "mcp__filesystem__read_file",
      "Bash(gh:*)",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__create_directory",
      "mcp__filesystem__write_file",
      "Bash(cat:*)",
      "mcp__memory__add_observations",
      "mcp__notion__API-get-self",
      "mcp__github-v2__test_connection",
      "mcp__memory__read_graph",
      "mcp__filesystem__list_allowed_directories",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_file_upload",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_type",
      "mcp__github-v2__my_repositories",
      "mcp__github-v2__issues_manage",
      "Bash(set CUDA_VISIBLE_DEVICES=)",
      "Bash(pip cache:*)",
      "Bash(export PYTHONIOENCODING=utf-8)",
      "mcp__memory__open_nodes",
      "Bash(ollama:*)",
      "Bash(where:*)",
      "Bash(\"C:\\Users\\PC_58410\\AppData\\Local\\Programs\\Ollama\\ollama.exe\" pull gemma3:4b)",
      "Bash(check_ollama.py)",
      "Bash(chcp:*)",
      "mcp__playwright__browser_close",
      "Bash(del debug_mixed_detection.py)",
      "mcp__playwright__browser_press_key",
      "Bash(cmd.exe /c \"taskkill /f /pid 55612\")",
      "Bash(start_solomond_safe.bat)",
      "Bash(.start_solomond_safe.bat)",
      "Bash(cmd:*)",
      "Bash(start \"\" \"http://localhost:8512\")",
      "mcp__playwright__browser_tab_new",
      "WebFetch(domain:players.brightcove.net)",
      "mcp__playwright__browser_console_messages",
      "Bash(wmic:*)",
      "mcp__playwright__browser_evaluate",
      "WebFetch(domain:claude.ai)",
      "Bash(start cmd /k \"streamlit run \"\"C:\\Users\\PC_58410\\solomond-ai-system\\modules\\module1_conference\\conference_analysis.py\"\" --server.port 8501\")",
      "Bash(start cmd /k \"streamlit run \"\"C:\\Users\\PC_58410\\solomond-ai-system\\modules\\module3_gemstone\\gemstone_analyzer.py\"\" --server.port 8503\")",
      "Bash(start \"\" \"C:\\Users\\PC_58410\\AppData\\Local\\Claude\\Claude.exe\")",
      "Bash(true)",
      "mcp__playwright__browser_install",
      "Bash(# 핵심 문서들만 보존 (이동하지 않음)\ncore_docs=(\"\"README.md\"\" \"\"CLAUDE.md\"\" \"\"TROUBLESHOOTING.md\"\" \"\"USAGE_GUIDE.md\"\")\n\n# 레거시 문서들 아카이브로 이동\nfind . -maxdepth 1 -name \"\"*.md\"\" | while read file; do\n  filename=$(basename \"\"$file\"\")\n  # 핵심 문서가 아닌 경우 아카이브로 이동\n  if [[ ! \"\"$filename\"\" =~ ^(README|CLAUDE|TROUBLESHOOTING|USAGE_GUIDE)\\.md$ ]]; then\n    mv \"\"$file\"\" \"\"archive/legacy_docs/\"\"\n    echo \"\"이동: $filename\"\"\n  fi\ndone)",
      "Bash(start cmd /k:*)",
      "Bash(move:*)",
      "Bash(touch:*)",
      "Bash(./restart_system.bat)",
      "Bash(start \"\" \"http://localhost:8500\")",
      "Bash(start \"\" \"http://localhost:8550\")",
      "Bash(start \"\" \"http://localhost:8555\")",
      "Bash(C:UsersPC_58410AppDataRoamingPythonPython313Scriptsstreamlit.exe run simple_test.py --server.port 8888)",
      "Bash(\"C:\\Users\\PC_58410\\AppData\\Roaming\\Python\\Python313\\Scripts\\streamlit.exe\" run simple_test.py --server.port 8888)",
      "Bash(start \"\" \"http://localhost:8556\")",
      "Bash(start \"\" \"http://localhost:8888\")",
      "Bash(start \"\" \"http://localhost:8000\")",
      "Bash(start \"\" \"http://localhost:8080\")",
      "Bash(start \"\" \"http://localhost:8001/docs\")",
      "Bash(start \"\" \"C:\\Users\\PC_58410\\solomond-ai-system\\dashboard.html\")",
      "Bash(start \"\" \"http://localhost:8501\")",
      "Bash(start \"\" \"file:///C:/Users/PC_58410/solomond-ai-system/dashboard.html\")",
      "Bash(./START_CLEAN_SYSTEM.bat)",
      "Bash(\"C:\\Users\\PC_58410\\AppData\\Roaming\\Python\\Python313\\Scripts\\streamlit.exe\" run modulesmodule1_conferenceconference_analysis.py --server.port 8501 --server.address localhost)",
      "Bash(C:)",
      "Bash(start \"\":*)",
      "Bash(START_MICROSERVICES.bat)",
      "Bash(start:*)",
      "Bash(netsh:*)",
      "mcp__playwright__browser_handle_dialog",
      "mcp__playwright__browser_tab_select",
      "mcp__playwright__browser_tab_list",
      "Bash(\"C:\\Users\\PC_58410\\AppData\\Roaming\\Python\\Python313\\Scripts\\streamlit.exe\" run modules/module1_conference/conference_analysis.py --server.port 8501)",
      "Bash(git clone:*)",
      "Bash(uv run:*)",
      "WebFetch(domain:api.perplexity.ai)",
      "Bash(set PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY})",
      "Bash(cscript:*)",
      "Bash(\"C:\\Users\\PC_58410\\solomond-ai-system\\create_shortcut.bat\")",
      "Bash(\"C:\\Users\\PC_58410\\solomond-ai-system\\create_shortcut_simple.bat\")",
      "Bash(\"C:\\Users\\PC_58410\\solomond-ai-system\\SOLOMOND_AI_START.bat\")",
      "Bash(\"C:\\Users\\PC_58410\\solomond-ai-system\\START_SIMPLE.bat\")",
      "Bash(\"C:\\Users\\PC_58410\\solomond-ai-system\\fix_shortcut.bat\")",
      "Bash(\"SOLOMOND_AI_START.bat\")",
      "Bash(C:/Users/PC_58410/Desktop/SOLOMOND_AI_START.bat)",
      "Bash(/bashes)",
      "Bash(PYTHONPATH=. streamlit run conference_analysis_MULTIMODAL_FUSION.py --server.port 8502)",
      "Bash(PYTHONPATH=. streamlit run conference_analysis_ULTIMATE_INTEGRATED.py --server.port 8501)",
      "Bash(PYTHONPATH=. python -m streamlit run conference_analysis_ULTIMATE_INTEGRATED.py --server.port 8550)",
      "Bash(PYTHONPATH=. python -m streamlit run conference_analysis_COMPLETE_WORKING.py --server.port 8550)",
      "Bash(PYTHONPATH=. python -m streamlit run conference_analysis_ENHANCED_LLM.py --server.port 8550)",
      "Bash(PYTHONPATH=. python -m streamlit run conference_analysis_WORKING_FIXED.py --server.port 8550)",
      "Bash(uv:*)",
      "Bash(chmod:*)",
      "Bash(del install_hybrid.sh)",
      "WebSearch",
      "Bash(/install-github-app)",
      "Bash(n8n:*)",
      "Bash(git fetch:*)",
      "mcp__playwright__browser_resize",
      "WebFetch(domain:youtu.be)",
      "WebFetch(domain:www.youtube.com)",
      "Bash(git gc:*)",
      "Bash(git rev-list:*)",
      "Bash(sed:*)",
      "Bash(git rebase:*)",
      "Bash(git remote set-url:*)",
      "Bash(git checkout:*)",
      "Bash(ping:*)",
      "Bash(git submodule:*)",
      "Bash(git reset:*)",
      "Bash(git restore:*)",
      "Bash(git count-objects:*)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "C:\\Users\\PC_58410"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "github-v2",
    "playwright",
    "notion",
    "smart-crawler"
  ]
}